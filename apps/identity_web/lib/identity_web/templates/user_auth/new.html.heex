<% is_register = @submit_action == "register" %>
<main class="arrows">
    <link phx-track-static rel="stylesheet" href={Routes.static_path(@conn, "/assets/form.css")} media="print" onload='this.media="all"'/>
    <script defer phx-track-static type="text/javascript" src={Routes.static_path(@conn, "/assets/form.js")}></script>
  <%= oauth_header "auth", @client %>
  <.form let={f} for={@changeset} action={Routes.user_auth_path(@conn, (if is_register, do: :register, else: :login))} as={:user}>
    <%= radio_button f, :submit_action, "register",
      checked: is_register,
      autocomplete: "off",
      "data-form-action": Routes.user_auth_path(@conn, :register), "data-submit": gettext("Create my account") %>
    <%= radio_button f, :submit_action, "login",
      checked: !is_register,
      autocomplete: "off",
      "data-form-action": Routes.user_auth_path(@conn, :login), "data-submit": gettext("Log in") %>
    <nav class="tab">
      <%= label f, :submit_action_register, gettext("Register") %>
      <%= label f, :submit_action_login, gettext("Log in") %>
    </nav>
    <%= if @error_message do %>
      <p class="{@submit_action} alert alert-danger"><%= @error_message %></p>
    <% end %>

    <fieldset>
      <%= label f, :email %>
      <%= email_input f, :email, required: true, autocomplete: "email" %>
      <%= error_tag f, :email, class: @submit_action %>
    </fieldset>

    <fieldset class="password">
      <%= inputs_for f, :password, fn fp -> %>
        <%= label fp, :password, class: "lenra-icon-eye" %>
        <%= password_input fp, :password, required: true, minlength: Lenra.Accounts.Password.min_length, autocomplete: "current-password" %>
        <ul class="register rules">
          <% IO.inspect(fp.errors) %>
          <% errors = Enum.map(fp.errors, fn {:password, error} -> elem(error, 0) end) %>
          <% message = "At least 8 characters" %>
          <li class={ if message in errors do "error" else "" end } data-kind="min" data-count={Lenra.Accounts.Password.min_length}><%= gettext("At least %{count} characters", count: Lenra.Accounts.Password.min_length) %></li>
          <% message = "At least 1 uppercase" %>
          <li class={ if message in errors do "error" else "" end } data-kind="format" data-pattern={Lenra.Accounts.Password.uppercase_regex.source}><%= gettext("At least 1 uppercase") %></li>
          <% message = "At least 1 lowercase" %>
          <li class={ if message in errors do "error" else "" end } data-kind="format" data-pattern={Lenra.Accounts.Password.lowercase_regex.source}><%= gettext("At least 1 lowercase") %></li>
          <% message = "At least 1 digit or punctuation character" %>
          <li class={ if message in errors do "error" else "" end } data-kind="format" data-pattern={Lenra.Accounts.Password.other_char_regex.source}><%= gettext("At least 1 digit or punctuation character") %></li>
        </ul>
      <% end %>
    </fieldset>

    <fieldset class="login">
      <%= checkbox f, :remember_me %>
      <%= label f, :remember_me, gettext("Keep me logged in for %{days} days", days: HydraApi.get_remember_days) %>
    </fieldset>

    <%= if assigns[:login_challenge] do %>
      <%= hidden_input f, :login_challenge, value: @login_challenge %>
    <% end %>

    <%= submit (if is_register, do: gettext("Create my account"), else: gettext("Log in")), class: "primary", disabled: true %>
    <%= link gettext("I forgot my password"), to: Routes.user_auth_path(@conn, :lost_password_enter_email), class: "login btn link lenra-icon-chevron-right"%>
  </.form>
</main>
